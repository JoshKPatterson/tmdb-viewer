{"version":3,"sources":["images/image_not_available.jpg","components/displayItems/Movie.js","components/displayItems/TvShow.js","components/PageCountDisplay.js","apis/moviedb.js","actions/index.js","actions/types.js","components/paginationButtons/NextPageButton.js","components/paginationButtons/PreviousPageButton.js","components/paginationButtons/ButtonArea.js","components/ItemList.js","components/Dropdown.js","components/ItemSearchbar.js","extraFunctions/index.js","components/Loader.js","components/detailItems/MovieDetails.js","components/detailItems/TvShowDetails.js","components/SelectedItem.js","components/Header.js","components/Attribution.js","components/App.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Movie","props","react_default","a","createElement","Fragment","className","src","image","concat","image_not_available","alt","title","releaseDate","overview","TvShow","name","firstAirDate","connect","state","pages","itemSearch","_ref","totalPages","currentPage","totalResults","axios","create","baseURL","params","api_key","include_adult","language","movieSearch","query","pageNum","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","moviedb","get","page","sent","type","payload","data","stop","_x","apply","this","arguments","tvShowSearch","_ref2","_callee2","_context2","_x2","clearSelected","itemIdentifier","onClick","paginationButtons_PreviousPageButton","paginationButtons_NextPageButton","items","list","itemSelect","item","components_PageCountDisplay","map","key","id","displayItems_Movie","original_title","poster_path","release_date","displayItems_TvShow","original_name","first_air_date","renderList","paginationButtons_ButtonArea","Dropdown","onChange","setSetting","value","_useState","useState","_useState2","slicedToArray","term","setTerm","_useState3","_useState4","setting","onSubmit","e","placeholder","target","onKeyPress","components_Dropdown","genreDisplay","b","genres","genre_ids","num","filter","obj","genreItems","toConsumableArray","Set","length","genre","checkPosterPath","replace","Loader","movie","movieGenres","movieGenresList","imageLoaded","setImageLoaded","useEffect","components_Loader","onLoad","onError","show","showGenres","showGenresList","detailItems_MovieDetails","detailItems_TvShowDetails","Header","Attribution","href","genresGet","_ref3","_callee3","responseObj","_context3","t0","t1","_x3","components_Header","ItemSearchbar","ItemList","components_SelectedItem","components_Attribution","combineReducers","undefined","action","results","total_results","total_pages","selectedItem","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.54ab1b4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image_not_available.d3751d34.jpg\";","import React from 'react';\r\nimport image_not_available from '../../images/image_not_available.jpg'\r\n\r\n\r\n// props list:\r\n// title, releaseDate, image, overview\r\n\r\nconst Movie = (props) => {\r\n  return (\r\n    <>\r\n      <div className='listItemPicture'>\r\n        <img\r\n          src={props.image ? `https://image.tmdb.org/t/p/w400${props.image}` : image_not_available}\r\n          alt={props.title}\r\n        ></img>\r\n      </div>\r\n      <div className='listItemDetails'>\r\n        <h3>{props.title}</h3>\r\n        <p className='listItemDetailsDate'>{props.releaseDate ? `(${props.releaseDate})` : null}</p>\r\n        <p>{props.overview ? `${props.overview}` : 'No Summary Available'}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// {props.title} {props.releaseDate ? `(${props.releaseDate})` : null}\r\n\r\nexport default Movie\r\n","import React from 'react';\r\nimport image_not_available from '../../images/image_not_available.jpg'\r\n\r\n// props list:\r\n// name, firstAirDate, image, overview\r\n\r\nconst TvShow = (props) => {\r\n  return (\r\n    <>\r\n      <div className='listItemPicture'>\r\n        <img\r\n          src={props.image ? `https://image.tmdb.org/t/p/w300${props.image}` : image_not_available}\r\n          alt={props.name}\r\n        ></img>\r\n      </div>\r\n      <div className='listItemDetails'>\r\n        <h3>{props.name}</h3>\r\n          <p className='listItemDetailsDate'>{props.firstAirDate ? `(${props.firstAirDate})` : null}</p>\r\n          <p>{props.overview ? `${props.overview}` : `No Summary Available`}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TvShow\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst PageCountDisplay = ({ pages }) => {\r\n\r\n  const pageCalculation = () => {\r\n    if(pages.totalPages === null){\r\n      return <div className='pageCountDisplay'>Make a search to see a list of movies!</div>\r\n    }\r\n    if(pages.currentPage < pages.totalPages){\r\n      return <div className='pageCountDisplay'>Showing {(pages.currentPage * 20) - 19} - {pages.currentPage * 20} of {pages.totalResults}</div>\r\n    } else if (pages.currentPage === pages.totalPages){\r\n      return <div className='pageCountDisplay'>Showing {(pages.currentPage * 20) - 19} - {pages.totalResults} of {pages.totalResults}</div>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {pageCalculation()}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { pages: state.itemSearch.pages }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PageCountDisplay)\r\n","import axios from 'axios';\r\n\r\nconst KEY = '3ef8736602e3112b4a20260c7ba9098b'\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  params: {\r\n    api_key: KEY,\r\n    include_adult: false,\r\n    language: 'en'\r\n  }\r\n})","import moviedb from '../apis/moviedb';\r\nimport { \r\n  MOVIE_SEARCH, \r\n  ITEM_SELECT,\r\n  TV_SEARCH,\r\n  GENRES_GET,\r\n  CLEAR_SELECTED\r\n} from './types'\r\n\r\nexport const movieSearch = (query, pageNum) => async dispatch => {\r\n  const response = await moviedb.get('/search/movie', {\r\n    params: {\r\n      query: query,\r\n      page: pageNum\r\n    }\r\n  });\r\n  dispatch({ type: MOVIE_SEARCH, payload: {\r\n    data: response.data,\r\n    query: query\r\n  } })\r\n}\r\n\r\nexport const tvShowSearch = (query, pageNum) => async dispatch => {\r\n  const response = await moviedb.get('/search/tv', {\r\n    params: {\r\n      query: query,\r\n      page: pageNum\r\n    }\r\n  });\r\n  dispatch({ type: TV_SEARCH, payload: {\r\n    data: response.data,\r\n    query: query\r\n  } })\r\n}\r\n\r\nexport const itemSelect = item => {\r\n  return {\r\n    type: ITEM_SELECT,\r\n    payload: item\r\n  }\r\n}\r\n\r\nexport const genresGet = () => async dispatch => {\r\n  const responseObj = {\r\n    movieGenres: await moviedb.get('/genre/movie/list'),\r\n    showGenres: await moviedb.get('/genre/tv/list')\r\n  };\r\n  dispatch({ type: GENRES_GET, payload: responseObj })\r\n}\r\n\r\nexport const clearSelected = () => {\r\n  return {\r\n    type: CLEAR_SELECTED\r\n  }\r\n}","export const MOVIE_SEARCH = 'MOVIE_SEARCH';\r\nexport const TV_SEARCH = 'TV_SEARCH';\r\nexport const ITEM_SELECT = 'ITEM_SELECT';\r\nexport const GENRES_GET = 'GENRES_GET';\r\nexport const CLEAR_SELECTED = 'CLEAR_SELECTED';\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  MOVIE_SEARCH,\r\n  TV_SEARCH\r\n} from '../../actions/types';\r\nimport {\r\n  movieSearch,\r\n  tvShowSearch\r\n} from '../../actions';\r\n\r\nconst NextPageButton = ({ type, movieSearch, tvShowSearch, query, page }) => {\r\n\r\n  const onSubmit = () => {\r\n    switch(type){\r\n      case MOVIE_SEARCH:\r\n        movieSearch(query, (page + 1));\r\n        break;\r\n      case TV_SEARCH:\r\n        tvShowSearch(query, (page + 1));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  return <button onClick={onSubmit} className='nextButton btn btn-primary'>Next Page</button>\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return { type: state.itemIdentifier, query: state.itemSearch.query, page: state.itemSearch.pages.currentPage }\r\n}\r\n\r\nexport default connect(mapStatetoProps, {\r\n  movieSearch,\r\n  tvShowSearch\r\n})(NextPageButton)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  MOVIE_SEARCH,\r\n  TV_SEARCH\r\n} from '../../actions/types';\r\nimport {\r\n  movieSearch,\r\n  tvShowSearch\r\n} from '../../actions';\r\n\r\nconst PreviousPageButton = ({ type, movieSearch, tvShowSearch, query, page }) => {\r\n\r\n  const onSubmit = () => {\r\n    switch(type){\r\n      case MOVIE_SEARCH:\r\n        movieSearch(query, (page - 1));\r\n        break;\r\n      case TV_SEARCH:\r\n        tvShowSearch(query, (page - 1));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  return <button onClick={onSubmit} className='prevButton btn btn-primary'>Previous Page</button>\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return { type: state.itemIdentifier, query: state.itemSearch.query, page: state.itemSearch.pages.currentPage }\r\n}\r\n\r\nexport default connect(mapStatetoProps, {\r\n  movieSearch,\r\n  tvShowSearch\r\n})(PreviousPageButton)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NextPageButton from './NextPageButton';\r\nimport PreviousPageButton from './PreviousPageButton';\r\n\r\nconst ButtonArea = ({ pages }) => {\r\n\r\n  const renderButtonLogic = () => {\r\n    if(pages.currentPage < pages.totalPages && pages.currentPage > 1){\r\n      return <><PreviousPageButton /><NextPageButton /></>\r\n    }\r\n    if(pages.currentPage > 1){\r\n      return <PreviousPageButton />\r\n    }\r\n    if(pages.currentPage < pages.totalPages){\r\n      return <NextPageButton />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='buttonArea'>\r\n      {renderButtonLogic()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { pages: state.itemSearch.pages }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ButtonArea)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Movie from './displayItems/Movie'\r\nimport TvShow from './displayItems/TvShow'\r\nimport PageCountDisplay from './PageCountDisplay';\r\nimport ButtonArea from './paginationButtons/ButtonArea';\r\nimport { itemSelect } from '../actions'\r\nimport { \r\n  MOVIE_SEARCH,\r\n  TV_SEARCH\r\n} from '../actions/types'\r\n\r\nconst MovieList = (props) => {\r\n  const renderList = () => {\r\n    switch(props.type){\r\n      case MOVIE_SEARCH:\r\n        return props.items.map((item) => {\r\n          return (\r\n                  <div onClick={() => props.itemSelect(item)} key={item.id} className='listItem'>\r\n                    <Movie \r\n                      title={item.original_title} \r\n                      key={item.id}\r\n                      image={item.poster_path}\r\n                      releaseDate={item.release_date}\r\n                      overview={item.overview}\r\n                    />\r\n                  </div>\r\n                )\r\n        })\r\n      case TV_SEARCH:\r\n        return props.items.map((item) => {\r\n          return (\r\n                  <div onClick={() => props.itemSelect(item)} key={item.id} className='listItem'>\r\n                    <TvShow \r\n                      name={item.original_name} \r\n                      key={item.id}\r\n                      image={item.poster_path}\r\n                      firstAirDate={item.first_air_date}\r\n                      overview={item.overview}\r\n                    />\r\n                  </div>\r\n                )\r\n        })\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  \r\n  const renderButtons = () => props.items === null ? null : <ButtonArea />\r\n\r\n  return (\r\n    <>\r\n      <PageCountDisplay />\r\n      <div className='list'>\r\n        {renderList()}\r\n      </div>\r\n      {renderButtons()}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { items: state.itemSearch.list, type: state.itemIdentifier }\r\n}\r\n\r\nexport default connect(mapStateToProps, { itemSelect })(MovieList)\r\n","import React from 'react'\r\n\r\nconst Dropdown = (props) => {\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <select onChange={props.setSetting}>\r\n        <option value='movie'>Movie</option>\r\n        <option value='tvShow'>TV Show</option>\r\n      </select>\r\n      <span className='dropdown-arrow'></span>\r\n    </div>\r\n  )\r\n  // return (\r\n  //   <div className='dropdown-menu'>\r\n\r\n  //   </div>\r\n  // )\r\n}\r\n\r\nexport default Dropdown\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  movieSearch,\r\n  tvShowSearch\r\n } from '../actions';\r\nimport Dropdown from './Dropdown'\r\n\r\nconst MovieSearchbar = (props) => {\r\n\r\n  const [term, setTerm] = useState('transformers');\r\n  const [setting, setSetting] = useState('movie');\r\n\r\n  const onSetSetting = (e) => {\r\n    setSetting(e.target.value)\r\n  }\r\n  const onSubmit = e => {\r\n    switch(setting){\r\n      case 'movie':\r\n        props.movieSearch(term, 1)\r\n        break;\r\n      case 'tvShow':\r\n        props.tvShowSearch(term, 1)\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const keyPressed = e => e.key === 'Enter' ? onSubmit() : null\r\n\r\n  return (\r\n    <div className='itemSearchBar'>\r\n      <div className='input-group mb-3'>\r\n        <div className='input-group-prepend'>\r\n          <span className='input-group-text'><i className=\"fas fa-search\"></i></span>\r\n        </div>\r\n        <input\r\n        placeholder='Enter search term here'\r\n        className='form-control' \r\n        type='text'\r\n        // value={term}\r\n        onChange={e => setTerm(e.target.value)}\r\n        onKeyPress={keyPressed}\r\n      />\r\n      <div className='input-group-append'>\r\n      <Dropdown setSetting={onSetSetting}/>\r\n      <button \r\n      className='btn btn-primary' \r\n      onClick={onSubmit}\r\n      >\r\n        Search\r\n      </button>\r\n      </div>\r\n      \r\n      </div>\r\n      \r\n\r\n      {/* <button \r\n      className='btn btn-primary' \r\n      onClick={onSubmit}\r\n      >\r\n        Search\r\n      </button> */}\r\n      {/* <Dropdown setSetting={onSetSetting}/> */}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { \r\n  movieSearch,\r\n  tvShowSearch\r\n })(MovieSearchbar)\r\n","import React from 'react'\r\n\r\n// this function renders a list of unique genre labels that correspond to a particular item\r\n// a refers to the type of item being rendered, such as show or movie\r\n// b refers to the the genre list reducer that corresponds to a\r\nexport const genreDisplay = (a, b) => {\r\n  const genres = a.genre_ids.map(num => {\r\n    const genre = b.filter(obj => obj.id === num)\r\n    return genre[0].name\r\n   })\r\n  const genreItems = [...new Set(genres)]\r\n  return (\r\n    <>\r\n      {genreItems.length === 0 ? <>Genres Unknown.</> : genreItems.map(genre => <li className='genre' key={genre}> {genre}</li> )}\r\n    </>\r\n  )\r\n} \r\n\r\n// this function helps determine what to render based on the absense of a poster photo and the current state of imageLoaded or other relevant state variable\r\n// a refers to the type of item being rendered, such as show or movie\r\n// b refers to the state variable that determines whether image has loaded, like imageLoaded\r\n// item refers to the item that is being rendered by the function\r\n// replace refers to an optional special item, used to indicate a lack of item\r\nexport const checkPosterPath = (a, state, item, replace) => !a.poster_path ? item : !state ? null : item ? item : replace","import React from 'react'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loading'>\r\n      <p>Loading...</p>\r\n      <br />\r\n      <div className='loader'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport image_not_available from '../../images/image_not_available.jpg'\r\nimport { genreDisplay, checkPosterPath } from '../../extraFunctions'\r\nimport Loader from '../Loader'\r\nimport { clearSelected } from '../../actions'\r\n\r\nconst MovieDetails = ({ movie, movieGenres, clearSelected }) => {\r\n\r\n  const [imageLoaded, setImageLoaded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setImageLoaded(false)\r\n  }, [movie])\r\n\r\n  if(!movie){\r\n    // return <div>Select a movie!</div>\r\n    return null\r\n  }\r\n\r\n  const renderList = () => {\r\n    const renderDetails = () => {\r\n      return (\r\n        <>\r\n        <div className='closeButton'>\r\n          <button onClick={clearSelected}>\r\n          <i className=\"far fa-times-circle\"></i>\r\n          </button>\r\n        </div>\r\n        <div className='sideDetails'>\r\n          <p><span>Release Date</span><br />{movie.release_date ? movie.release_date : 'Release Date Unknown.'}</p>\r\n          <p className='genres'><span>Genres</span><br />{genreDisplay(movie, movieGenres)}</p>\r\n        </div>\r\n        <div className='underDetails'>\r\n          <h2>{movie.title}</h2>\r\n          <p className='overview'>{movie.overview ? movie.overview : 'Plot Unknown.'}</p>\r\n        </div>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <img\r\n          src={movie.poster_path ? `https://image.tmdb.org/t/p/w400${movie.poster_path}` : image_not_available}\r\n          key={movie.poster_path} \r\n          alt={''}\r\n          onLoad={() => setImageLoaded(true)}\r\n          onError={() => setImageLoaded(true)}\r\n        />\r\n        {checkPosterPath(movie, imageLoaded, renderDetails())}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='selectedItem'>\r\n      {!movie.poster_path ? null : imageLoaded ? null : <Loader />}\r\n      {renderList()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { movie: state.itemSelect, movieGenres:  state.movieGenresList }\r\n}\r\n\r\nexport default connect(mapStateToProps, { clearSelected })(MovieDetails)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport image_not_available from '../../images/image_not_available.jpg'\r\nimport { genreDisplay, checkPosterPath } from '../../extraFunctions'\r\nimport Loader from '../Loader'\r\nimport { clearSelected } from '../../actions'\r\n\r\n\r\nconst TvShowDetails = ({ show, showGenres, clearSelected }) => {\r\n\r\n  const [imageLoaded, setImageLoaded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setImageLoaded(false)\r\n  }, [show])\r\n\r\n  if(!show){\r\n    return null\r\n  }\r\n\r\n  const renderList = () => {\r\n    const renderDetails = () => {\r\n      return (\r\n        <>\r\n          <div className='closeButton'>\r\n            <button onClick={clearSelected}>\r\n            <i className=\"far fa-times-circle\"></i>\r\n            </button>\r\n          </div>\r\n          <div className='sideDetails'>\r\n            <p><span>First Air Date</span><br />{show.first_air_date ? show.first_air_date : 'First Air Date Unknown'}</p>\r\n            <p><span>Genres</span><br />{genreDisplay(show, showGenres)}</p>\r\n          </div>\r\n          <div className='underDetails'>\r\n            <h2>{show.name}</h2>\r\n            <p className='overview'>{show.overview ? show.overview : 'None to display'}</p>\r\n          </div>  \r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <img \r\n        src={show.poster_path ? `https://image.tmdb.org/t/p/w300${show.poster_path}` : image_not_available} \r\n        key={show.poster_path}\r\n        alt={''}\r\n        onLoad={() => setImageLoaded(true)}\r\n        onError={() => setImageLoaded(true)}\r\n        />\r\n      {checkPosterPath(show, imageLoaded, renderDetails())}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='selectedItem'>\r\n      {!show.poster_path ? null : imageLoaded ? null : <Loader />}\r\n      {renderList()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { show: state.itemSelect, showGenres: state.showGenresList }\r\n}\r\n\r\nexport default connect(mapStateToProps, { clearSelected })(TvShowDetails)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MovieDetails from './detailItems/MovieDetails';\r\nimport TvShowDetails from './detailItems/TvShowDetails';\r\nimport { \r\n  MOVIE_SEARCH,\r\n  TV_SEARCH\r\n } from '../actions/types'\r\n\r\nconst SelectedItem = ({ type }) => {\r\n  switch(type){\r\n    case MOVIE_SEARCH:\r\n      return <MovieDetails />\r\n    case TV_SEARCH:\r\n      return <TvShowDetails />\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { type: state.itemIdentifier }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelectedItem)\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='navbar'>\r\n      <h1 className='navbar-brand'>TMDb Viewer</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Attribution = () => {\r\n  return (\r\n    <footer>\r\n      <p>Powered by <a href='https://www.themoviedb.org'>The Movie Database</a></p> \r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Attribution\r\n","import React, { useEffect } from 'react';\nimport ItemList from './ItemList';\nimport ItemSearchbar from './ItemSearchbar';\nimport SelectedItem from './SelectedItem';\nimport Header from './Header'\nimport Attribution from './Attribution'\nimport { genresGet } from '../actions'\nimport { connect } from 'react-redux'\n\nfunction App({ genresGet }) {\n  useEffect(() => {\n    genresGet();\n  }, [])\n  return (\n    <div className='app'>\n      <Header />\n        <ItemSearchbar />\n      <div className='itemArea'>\n        <div className='itemListArea'>\n          <ItemList />\n        </div>\n        <div className='selectedItemArea'>\n          <SelectedItem />\n        </div>\n      </div>\n      <Attribution />\n    </div>\n  );\n}\n\nexport default connect(null, { genresGet })(App);\n","import { \r\n  MOVIE_SEARCH,\r\n  TV_SEARCH,\r\n  ITEM_SELECT,\r\n  GENRES_GET,\r\n  CLEAR_SELECTED\r\n } from '../actions/types'\r\nimport { combineReducers } from 'redux'\r\n\r\n\r\nconst itemSearchReducer = (state = {\r\n  list: null, \r\n  query: null,\r\n  pages: {\r\n    currentPage: null,\r\n    totalResults: null,\r\n    totalPages: null\r\n  }\r\n}, action) => {\r\n  switch(action.type){\r\n    case MOVIE_SEARCH:\r\n    case TV_SEARCH:\r\n      return state = { \r\n        list: action.payload.data.results,\r\n        query: action.payload.query, \r\n        pages: {\r\n          currentPage: action.payload.data.page,\r\n          totalResults: action.payload.data.total_results,\r\n          totalPages: action.payload.data.total_pages\r\n        } \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst itemIdentifierReducer = (state = null, action) => {\r\n  switch(action.type){\r\n    case MOVIE_SEARCH:\r\n    case TV_SEARCH:\r\n      return state = action.type\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst itemSelectReducer = (selectedItem = null, action) => {\r\n  switch(action.type){\r\n    case MOVIE_SEARCH:\r\n    case TV_SEARCH:\r\n      return selectedItem = null;\r\n    case ITEM_SELECT: \r\n      return (\r\n        selectedItem = action.payload\r\n      )\r\n    case CLEAR_SELECTED:\r\n      return (\r\n        selectedItem = null\r\n      )\r\n    default:\r\n      return selectedItem;\r\n  }\r\n}\r\n\r\nconst movieGenresListReducer = (state = null, action) => {\r\n  switch(action.type){\r\n    case GENRES_GET:\r\n      return state = action.payload.movieGenres.data.genres\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst showGenresListReducer = (state = null, action) => {\r\n  switch(action.type){\r\n    case GENRES_GET:\r\n      return state = action.payload.showGenres.data.genres\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  itemSearch: itemSearchReducer,\r\n  itemSelect: itemSelectReducer,\r\n  itemIdentifier: itemIdentifierReducer,\r\n  movieGenresList: movieGenresListReducer,\r\n  showGenresList: showGenresListReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport './style.scss'\n\nimport App from './components/App';\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,document.getElementById('root'));"],"sourceRoot":""}