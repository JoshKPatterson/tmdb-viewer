{"version":3,"sources":["components/displayItems/Movie.js","components/displayItems/TvShow.js","components/PageCountDisplay.js","apis/moviedb.js","actions/index.js","actions/types.js","components/paginationButtons/NextPageButton.js","components/paginationButtons/PreviousPageButton.js","components/paginationButtons/ButtonArea.js","components/ItemList.js","components/Dropdown.js","components/ItemSearchbar.js","extraFunctions/index.js","components/detailItems/MovieDetails.js","components/detailItems/TvShowDetails.js","components/SelectedItem.js","components/App.js","reducers/index.js","index.js","images/image_not_available.jpg"],"names":["Movie","props","react_default","a","createElement","className","title","releaseDate","TvShow","name","firstAirDate","connect","state","pages","itemSearch","_ref","currentPage","totalPages","totalResults","axios","create","baseURL","params","api_key","include_adult","language","movieSearch","query","pageNum","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","moviedb","get","page","sent","type","payload","data","stop","_x","apply","this","arguments","tvShowSearch","_ref2","_callee2","_context2","_x2","itemIdentifier","onClick","Fragment","paginationButtons_PreviousPageButton","paginationButtons_NextPageButton","items","list","itemSelect","item","components_PageCountDisplay","map","key","id","displayItems_Movie","original_title","release_date","overview","displayItems_TvShow","original_name","first_air_date","renderList","paginationButtons_ButtonArea","Dropdown","onChange","setSetting","value","_useState","useState","_useState2","slicedToArray","term","setTerm","_useState3","_useState4","setting","onSubmit","e","target","onKeyPress","components_Dropdown","genreDisplay","b","genres","genre_ids","num","filter","obj","genreItems","toConsumableArray","Set","length","genre","checkPosterPath","replace","undefined","poster_path","movie","movieGenres","movieGenresList","imageLoaded","setImageLoaded","useEffect","src","concat","image_not_available","alt","onLoad","onError","show","showGenres","showGenresList","detailItems_MovieDetails","detailItems_TvShowDetails","genresGet","_ref3","_callee3","responseObj","_context3","t0","t1","_x3","ItemSearchbar","ItemList","components_SelectedItem","combineReducers","action","results","total_results","total_pages","selectedItem","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1eb16e0a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Movie = (props) => {\r\n  return (\r\n    <div className='movieItem'\r\n    >\r\n      {props.title} ({props.releaseDate})\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react';\r\n\r\nconst TvShow = (props) => {\r\n  return (\r\n    <div className='movieItem'\r\n    >\r\n      {props.name} ({props.firstAirDate})\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TvShow\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst PageCountDisplay = ({ pages }) => {\r\n\r\n  const pageCalculation = () => {\r\n    if(pages.currentPage < pages.totalPages){\r\n      return <div>showing {(pages.currentPage * 20) - 19} - {pages.currentPage * 20} of {pages.totalResults}</div>\r\n    } else if (pages.currentPage === pages.totalPages){\r\n      return <div>showing {(pages.currentPage * 20) - 19} - {pages.totalResults} of {pages.totalResults}</div>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {pageCalculation()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { pages: state.itemSearch.pages }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PageCountDisplay)\r\n","import axios from 'axios';\r\n\r\nconst KEY = '3ef8736602e3112b4a20260c7ba9098b'\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  params: {\r\n    api_key: KEY,\r\n    include_adult: false,\r\n    language: 'en'\r\n  }\r\n})","import moviedb from '../apis/moviedb';\r\nimport { \r\n  MOVIE_SEARCH, \r\n  ITEM_SELECT,\r\n  TV_SEARCH,\r\n  GENRES_GET\r\n} from './types'\r\n\r\nexport const movieSearch = (query, pageNum) => async dispatch => {\r\n  const response = await moviedb.get('/search/movie', {\r\n    params: {\r\n      query: query,\r\n      page: pageNum\r\n    }\r\n  });\r\n  dispatch({ type: MOVIE_SEARCH, payload: {\r\n    data: response.data,\r\n    query: query\r\n  } })\r\n}\r\n\r\nexport const tvShowSearch = (query, pageNum) => async dispatch => {\r\n  const response = await moviedb.get('/search/tv', {\r\n    params: {\r\n      query: query,\r\n      page: pageNum\r\n    }\r\n  });\r\n  dispatch({ type: TV_SEARCH, payload: {\r\n    data: response.data,\r\n    query: query\r\n  } })\r\n}\r\n\r\nexport const itemSelect = item => {\r\n  return {\r\n    type: ITEM_SELECT,\r\n    payload: item\r\n  }\r\n}\r\n\r\nexport const genresGet = () => async dispatch => {\r\n  const responseObj = {\r\n    movieGenres: await moviedb.get('/genre/movie/list'),\r\n    showGenres: await moviedb.get('/genre/tv/list')\r\n  };\r\n  dispatch({ type: GENRES_GET, payload: responseObj })\r\n}","export const MOVIE_SEARCH = 'MOVIE_SEARCH';\r\nexport const TV_SEARCH = 'TV_SEARCH';\r\nexport const ITEM_SELECT = 'ITEM_SELECT';\r\nexport const GENRES_GET = 'GENRES_GET';\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  MOVIE_SEARCH,\r\n  TV_SEARCH\r\n} from '../../actions/types';\r\nimport {\r\n  movieSearch,\r\n  tvShowSearch\r\n} from '../../actions';\r\n\r\nconst NextPageButton = ({ type, movieSearch, tvShowSearch, query, page }) => {\r\n\r\n  const onSubmit = () => {\r\n    switch(type){\r\n      case MOVIE_SEARCH:\r\n        movieSearch(query, (page + 1));\r\n        break;\r\n      case TV_SEARCH:\r\n        tvShowSearch(query, (page + 1));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={onSubmit}>Next Page</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return { type: state.itemIdentifier, query: state.itemSearch.query, page: state.itemSearch.pages.currentPage }\r\n}\r\n\r\nexport default connect(mapStatetoProps, {\r\n  movieSearch,\r\n  tvShowSearch\r\n})(NextPageButton)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  MOVIE_SEARCH,\r\n  TV_SEARCH\r\n} from '../../actions/types';\r\nimport {\r\n  movieSearch,\r\n  tvShowSearch\r\n} from '../../actions';\r\n\r\nconst PreviousPageButton = ({ type, movieSearch, tvShowSearch, query, page }) => {\r\n\r\n  const onSubmit = () => {\r\n    switch(type){\r\n      case MOVIE_SEARCH:\r\n        movieSearch(query, (page - 1));\r\n        break;\r\n      case TV_SEARCH:\r\n        tvShowSearch(query, (page - 1));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={onSubmit}>Previous Page</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return { type: state.itemIdentifier, query: state.itemSearch.query, page: state.itemSearch.pages.currentPage }\r\n}\r\n\r\nexport default connect(mapStatetoProps, {\r\n  movieSearch,\r\n  tvShowSearch\r\n})(PreviousPageButton)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NextPageButton from './NextPageButton';\r\nimport PreviousPageButton from './PreviousPageButton';\r\n\r\nconst ButtonArea = ({ pages }) => {\r\n\r\n  const renderButtonLogic = () => {\r\n    if(pages.currentPage < pages.totalPages && pages.currentPage > 1){\r\n      return <><PreviousPageButton /><NextPageButton /></>\r\n    }\r\n    if(pages.currentPage > 1){\r\n      return <PreviousPageButton />\r\n    }\r\n    if(pages.currentPage < pages.totalPages){\r\n      return <NextPageButton />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {renderButtonLogic()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { pages: state.itemSearch.pages }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ButtonArea)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Movie from './displayItems/Movie'\r\nimport TvShow from './displayItems/TvShow'\r\nimport PageCountDisplay from './PageCountDisplay';\r\nimport ButtonArea from './paginationButtons/ButtonArea';\r\nimport { itemSelect } from '../actions'\r\nimport { \r\n  MOVIE_SEARCH,\r\n  TV_SEARCH\r\n} from '../actions/types'\r\n\r\nconst MovieList = (props) => {\r\n  const renderList = () => {\r\n    if(props.items === null){\r\n      return <div\r\n      >Make a search to see a list of movies!</div>\r\n    }\r\n    switch(props.type){\r\n      case MOVIE_SEARCH:\r\n        return props.items.map((item) => {\r\n          return (\r\n                  <div onClick={() => props.itemSelect(item)} key={item.id}>\r\n                    <Movie \r\n                      title={item.original_title} \r\n                      key={item.id}\r\n                      releaseDate={item.release_date}\r\n                      overview={item.overview}\r\n                    />\r\n                  </div>\r\n                )\r\n        })\r\n      case TV_SEARCH:\r\n        return props.items.map((item) => {\r\n          return (\r\n                  <div onClick={() => props.itemSelect(item)} key={item.id}>\r\n                    <TvShow \r\n                      name={item.original_name} \r\n                      key={item.id}\r\n                      firstAirDate={item.first_air_date}\r\n                      overview={item.overview}\r\n                    />\r\n                  </div>\r\n                )\r\n        })\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  \r\n\r\n  const renderPages = () => props.items === null ? null : <PageCountDisplay />\r\n  const renderButtons = () => props.items === null ? null : <ButtonArea />\r\n\r\n  return (\r\n    <div>\r\n      {renderPages()}\r\n      {renderList()}\r\n      {renderButtons()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { items: state.itemSearch.list, type: state.itemIdentifier }\r\n}\r\n\r\nexport default connect(mapStateToProps, { itemSelect })(MovieList)\r\n","import React from 'react'\r\n\r\nconst Dropdown = (props) => {\r\n  return (\r\n    <div>\r\n      <select onChange={props.setSetting}>\r\n        <option value='movie'>Movie</option>\r\n        <option value='tvShow'>TV Show</option>\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dropdown\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  movieSearch,\r\n  tvShowSearch\r\n } from '../actions';\r\nimport Dropdown from './Dropdown'\r\n\r\nconst MovieSearchbar = (props) => {\r\n\r\n  const [term, setTerm] = useState('transformers');\r\n  const [setting, setSetting] = useState('movie');\r\n\r\n  const onSetSetting = (e) => {\r\n    setSetting(e.target.value)\r\n  }\r\n  const onSubmit = e => {\r\n    switch(setting){\r\n      case 'movie':\r\n        props.movieSearch(term, 1)\r\n        break;\r\n      case 'tvShow':\r\n        props.tvShowSearch(term, 1)\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const keyPressed = e => e.key === 'Enter' ? onSubmit() : null\r\n\r\n  return (\r\n    <div className='movieSearchBar'>\r\n      <input \r\n        type='text'\r\n        value={term}\r\n        onChange={e => setTerm(e.target.value)}\r\n        onKeyPress={keyPressed}\r\n      />\r\n      <button onClick={onSubmit}>Search</button>\r\n      <Dropdown setSetting={onSetSetting}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { \r\n  movieSearch,\r\n  tvShowSearch\r\n })(MovieSearchbar)\r\n","import React from 'react'\r\n\r\n// this function renders a list of unique genre labels that correspond to a particular item\r\n// a refers to the type of item being rendered, such as show or movie\r\n// b refers to the the genre list reducer that corresponds to a\r\nexport const genreDisplay = (a, b) => {\r\n  const genres = a.genre_ids.map(num => {\r\n    const genre = b.filter(obj => obj.id === num)\r\n    return genre[0].name\r\n   })\r\n  const genreItems = [...new Set(genres)]\r\n  return (\r\n    <div>\r\n      Genres:\r\n      {genreItems.length === 0 ? <div>None to display</div> : genreItems.map(genre => <div key={genre}>{genre}</div> )}\r\n    </div>\r\n  )\r\n} \r\n\r\n// this function helps determine what to render based on the absense of a poster photo and the current state of imageLoaded or other relevant state variable\r\n// a refers to the type of item being rendered, such as show or movie\r\n// b refers to the state variable that determines whether image has loaded, like imageLoaded\r\n// item refers to the item that is being rendered by the function\r\n// replace refers to an optional special item, used to indicate a lack of item\r\nexport const checkPosterPath = (a, state, item, replace = item) => !a.poster_path ? item : !state ? null : replace","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport image_not_available from '../../images/image_not_available.jpg'\r\nimport { genreDisplay, checkPosterPath } from '../../extraFunctions'\r\n\r\nconst MovieDetails = ({ movie, movieGenres }) => {\r\n\r\n  const [imageLoaded, setImageLoaded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setImageLoaded(false)\r\n  }, [movie])\r\n\r\n  if(!movie){\r\n    return <div>Select a movie!</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!movie.poster_path ? null : imageLoaded ? null : <div>Loading...</div>}\r\n      {checkPosterPath(movie, imageLoaded, movie.title)}\r\n      <br />\r\n      {checkPosterPath(movie, imageLoaded, movie.release_date, 'Release date unknown')}\r\n      <br />\r\n      {checkPosterPath(movie, imageLoaded, movie.overview)}\r\n      <br />\r\n      <img\r\n        src={movie.poster_path ? `https://image.tmdb.org/t/p/w300${movie.poster_path}` : image_not_available}\r\n        key={movie.poster_path} \r\n        alt={movie.title}\r\n        onLoad={() => setImageLoaded(true)}\r\n        onError={() => setImageLoaded(true)}\r\n      >\r\n      </img>\r\n      <br />\r\n      {checkPosterPath(movie, imageLoaded, genreDisplay(movie, movieGenres))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { movie: state.itemSelect, movieGenres:  state.movieGenresList }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MovieDetails)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport image_not_available from '../../images/image_not_available.jpg'\r\nimport { genreDisplay, checkPosterPath } from '../../extraFunctions'\r\n\r\nconst TvShowDetails = ({ show, showGenres }) => {\r\n\r\n  const [imageLoaded, setImageLoaded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setImageLoaded(false)\r\n  }, [show])\r\n\r\n  if(!show){\r\n    return <div>Select a show!</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!show.poster_path ? null : imageLoaded ? null : <div>Loading...</div>}\r\n      {checkPosterPath(show, imageLoaded, show.name)}\r\n      <br />\r\n      {checkPosterPath(show, imageLoaded, show.first_air_date, 'First Air Date Unknown')}\r\n      <br />\r\n      {checkPosterPath(show, imageLoaded, show.overview)}\r\n      <br />\r\n      <img \r\n        src={show.poster_path ? `https://image.tmdb.org/t/p/w300${show.poster_path}` : image_not_available} \r\n        key={show.poster_path}\r\n        alt={show.title}\r\n        onLoad={() => setImageLoaded(true)}\r\n        onError={() => setImageLoaded(true)}\r\n      >\r\n      </img>\r\n      <br />\r\n      {checkPosterPath(show, imageLoaded, genreDisplay(show, showGenres))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { show: state.itemSelect, showGenres: state.showGenresList }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TvShowDetails)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MovieDetails from './detailItems/MovieDetails';\r\nimport TvShowDetails from './detailItems/TvShowDetails';\r\nimport { \r\n  MOVIE_SEARCH,\r\n  TV_SEARCH\r\n } from '../actions/types'\r\n\r\nconst SelectedItem = ({ type }) => {\r\n  switch(type){\r\n    case MOVIE_SEARCH:\r\n      return <MovieDetails />\r\n    case TV_SEARCH:\r\n      return <TvShowDetails />\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { type: state.itemIdentifier }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelectedItem)\r\n","import React, { useEffect } from 'react';\nimport ItemList from './ItemList';\nimport ItemSearchbar from './ItemSearchbar';\nimport SelectedItem from './SelectedItem';\nimport { genresGet } from '../actions'\nimport { connect } from 'react-redux'\n\nfunction App({ genresGet }) {\n  useEffect(() => {\n    genresGet();\n  }, [])\n  return (\n    <div className='app'>\n        <ItemSearchbar />\n      <div className='movieArea'>\n        <div className='movieListArea'>\n          <ItemList />\n        </div>\n        <div className='selectedMovieArea'>\n          <SelectedItem />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(null, { genresGet })(App);\n","import { \r\n  MOVIE_SEARCH,\r\n  TV_SEARCH,\r\n  ITEM_SELECT,\r\n  GENRES_GET\r\n } from '../actions/types'\r\nimport { combineReducers } from 'redux'\r\n\r\n\r\nconst itemSearchReducer = (state = {\r\n  list: null, \r\n  query: null,\r\n  pages: {\r\n    currentPage: null,\r\n    totalResults: null,\r\n    totalPages: null\r\n  }\r\n}, action) => {\r\n  switch(action.type){\r\n    case MOVIE_SEARCH:\r\n    case TV_SEARCH:\r\n      return state = { \r\n        list: action.payload.data.results,\r\n        query: action.payload.query, \r\n        pages: {\r\n          currentPage: action.payload.data.page,\r\n          totalResults: action.payload.data.total_results,\r\n          totalPages: action.payload.data.total_pages\r\n        } \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst itemIdentifierReducer = (state = null, action) => {\r\n  switch(action.type){\r\n    case MOVIE_SEARCH:\r\n    case TV_SEARCH:\r\n      return state = action.type\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst itemSelectReducer = (selectedItem = null, action) => {\r\n  switch(action.type){\r\n    case MOVIE_SEARCH:\r\n    case TV_SEARCH:\r\n      return selectedItem = null;\r\n    case ITEM_SELECT: \r\n      return (\r\n        selectedItem = action.payload\r\n      )\r\n    default:\r\n      return selectedItem;\r\n  }\r\n}\r\n\r\nconst movieGenresListReducer = (state = null, action) => {\r\n  switch(action.type){\r\n    case GENRES_GET:\r\n      return state = action.payload.movieGenres.data.genres\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst showGenresListReducer = (state = null, action) => {\r\n  switch(action.type){\r\n    case GENRES_GET:\r\n      return state = action.payload.showGenres.data.genres\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  itemSearch: itemSearchReducer,\r\n  itemSelect: itemSelectReducer,\r\n  itemIdentifier: itemIdentifierReducer,\r\n  movieGenresList: movieGenresListReducer,\r\n  showGenresList: showGenresListReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/image_not_available.d3751d34.jpg\";"],"sourceRoot":""}